# generic:
#   labels:
#     link: ubos-service-service_label
#   annotations: {}
#   extraSelectorLabels: {}
#   podLabels: {}
#   podAnnotations: {}
#   extraVolumes: []
#   extraImagePullSecrets:
#     - name: regcred
# podAffinityPreset: soft
# podAntiAffinityPreset: soft
# nodeAffinityPreset:
#   type: ''
#   key: ''
#   values: []
# releasePrefix: ''
# envs: {}
# envsString: ''
# secretEnvs: {}
# secretEnvsString: ''
# imagePullSecrets: {}
# defaultImage: nodered/node-red
# defaultImageTag: latest
# defaultImagePullPolicy: Always
# deployments:
#   ubos-service-name:
#     labels: {}
#     podLabels: {}
#     replicaCount: "1"
#     nodeSelector: {}
#     tolerations: []
#     strategy:
#       type: Recreate
#     extraImagePullSecrets:
#       - name: regcred
#     extraSelectorLabels:
#       app: ubos-service-name
#     serviceAccountName: default
#     containers:
#       - name: backend
#         image: betedo/ubos-app-backend
#         imageTag: no-db
#         imagePullPolicy: Always
        # env: 
        #   - name: KEYCLOAK_CLIENT_ID
        #     value: ubos-service-KEYCLOAK_CLIENT_ID
        #   - name: KEYCLOAK_CLIENT_SECRET
        #     value: ubos-service-KEYCLOAK_CLIENT_SECRET
        #   - name: KEYCLOAK_HOST
        #     value: ubos-service-KEYCLOAK_HOST
        #   - name: KEYCLOAK_REALM
        #     value: ubos-service-KEYCLOAK_REALM
        #   - name: KC_LEGACY
        #     value: ubos-service-KC_LEGACY
        #   - name: NODE_RED_ENABLE_PROJECTS
        #     value: 'true'
        #   - name: NODE_TLS_REJECT_UNAUTHORIZED
        #     value: '0'
        #   - name: MAIN_URL
        #     value: ubos-service-MAIN_URL
        #   - name: APP_NAME
        #     value: ubos-service-APP_NAME
        #   - name: ORG_ID
        #     value: u ubos-service-ORG_ID
        #   - name: DATASOURCE_ID
        #     value: ubos-service-DATASOURCE_ID
        #   - name: MAIN_HOST
        #     value: ubos-service-MAIN_HOST
#         envsFromSecret: {}
#         ports:
#           - containerPort: 1880
#             name: backend
#             protocol: TCP
#         readinessProbe:
#           failureThreshold: 10
#           httpGet:
#             path: /
#             port: 1880
#             scheme: HTTP
#           initialDelaySeconds: 30
#           periodSeconds: 20
#           successThreshold: 1
#           timeoutSeconds: 15
#         envSecrets: []
#         envsFromConfigmap: {}
#         envConfigmaps: []
#         volumeMounts:
#           - name: nodered-dataubos-service-name
#             mountPath: /usr/src/node-red/git
#             subPath: git
#           - mountPath: /root/.ssh
#             name: nodered-dataubos-service-name
#             subPath: .ssh
#         resources: {}
#       - name: nginx-frontend
#         image: betedo/ubos-client-app
#         imageTag: latest
#         imagePullPolicy: Always
        # env: 
        #   - name: KEYCLOAK_CLIENT_ID
        #     value: ubos-service-KEYCLOAK_CLIENT_ID
        #   - name: KEYCLOAK_CLIENT_SECRET
        #     value: ubos-service-KEYCLOAK_CLIENT_SECRET
        #   - name: KEYCLOAK_HOST
        #     value: ubos-service-KEYCLOAK_HOST
        #   - name: KEYCLOAK_REALM
        #     value: ubos-service-KEYCLOAK_REALM
        #   - name: KC_LEGACY
        #     value: ubos-service-KC_LEGACY
        #   - name: NODE_RED_ENABLE_PROJECTS
        #     value: 'true'
        #   - name: NODE_TLS_REJECT_UNAUTHORIZED
        #     value: '0'
        #   - name: MAIN_URL
        #     value: ubos-service-MAIN_URL
        #   - name: APP_NAME
        #     value: ubos-service-APP_NAME
        #   - name: ORG_ID
        #     value: u ubos-service-ORG_ID
        #   - name: DATASOURCE_ID
        #     value: ubos-service-DATASOURCE_ID
        #   - name: MAIN_HOST
        #     value: ubos-service-MAIN_HOST
#         envsFromSecret: {}
#         ports:
#           - containerPort: 80
#             name: nginx-frontend
#             protocol: TCP
#         envSecrets: []
#         envsFromConfigmap: {}
#         envConfigmaps: []
#         volumeMounts:
#           - mountPath: /nginx.conf.template
#             name: nginx-ubos-service-name
#             subPath: nginx.conf.template
#         resources: {}
#     volumes:
#       - type: configMap
#         name: nginx-ubos-service-name
#         items:
#           - key: nginx.conf.template
#             path: nginx.conf.template
#       - type: pvc
#         name: nodered-dataubos-service-name
#         items:
#           - key: nodered-dataubos-service-name
#             path: nodered-dataubos-service-name
# services:
#   ubos-service-name:
#     type: ClusterIP
#     ports:
#       - name: backend
#         protocol: TCP
#         port: 1880
#       - name: nginx-frontend
#         protocol: TCP
#         port: 80
#     extraSelectorLabels:
#       app: ubos-service-name
# ingresses:
#   ubos-service-url:
#     annotations:
#       node-red.ingress.kubernetes.io/proxy-body-size: 128m
#     ingressClassName: nginx
#     name: ubos-service-name
#     hosts:
#       - paths:
#           - pathType: Prefix
#             path: /
#             serviceName: ubos-service-name
#             servicePort: nginx-frontend
#     extraTls:
#       - hosts:
#           - ubos-service-url
#         secretName: ubos-service-tls-secret
# secrets: {}
# configMaps:
#   nginx-ubos-service-name:
#     data:
#       nginx.conf.template: >2-
#          server { listen 80; client_max_body_size 40m; client_body_buffer_size 128k; gzip on; gzip_comp_level 5; gzip_min_length 256; gzip_proxied any; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; gzip_vary on; root /var/www/appsmith; proxy_read_timeout 3600; proxy_connect_timeout 3600; proxy_send_timeout 3600; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Host $host; location / { try_files $uri /index.html =404; alias /var/www/appsmith/; sub_filter CUSTOM_ENV '{`test`:`test`}';sub_filter CUSTOM_FAVICON favicon;sub_filter CUSTOM_TITLE ubos-service-title; } location /api/ { proxy_pass http://ubos-service-name-ubos-service-namespace-ubos-service-name:1880/; proxy_http_version  1.1; proxy_cache_bypass  $http_upgrade; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection upgrade; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Host $host; proxy_set_header X-Forwarded-Port $server_port; }
#         location /oauth2/ { proxy_pass
#         http://ubos-service-name-ubos-service-namespace-ubos-service-name:1880/;
#         proxy_http_version  1.1; proxy_cache_bypass  $http_upgrade;
#         proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection
#         upgrade; proxy_set_header Host $host; proxy_set_header X-Real-IP
#         $remote_addr; proxy_set_header X-Forwarded-For
#         $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Port $server_port; } location
#         /nodeRedManager/ { proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host; proxy_pass
#         http://ubos-service-name-ubos-service-namespace-ubos-service-name:1880/; } }
# pvcs:
#   nodered-dataubos-service-name:
#     accessModes:
#       - ReadWriteOnce
#     size: 5Gi
# hooks: {}
# cronJobs: {}
# jobs: {}
# serviceMonitors: {}
# diagnosticMode:
#   enbled: false
#   command:
#     - sleep
#   args:
#     - infinity
# extraDeploy: {}
