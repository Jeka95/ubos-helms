# generic:
#   labels:
#     link: ubos-service-service_label
#   annotations: {}
#   extraSelectorLabels: {}
#   podLabels: {}
#   podAnnotations: {}
#   extraVolumes: []
#   extraImagePullSecrets:
#     - name: regcred
# podAffinityPreset: soft
# podAntiAffinityPreset: soft
# nodeAffinityPreset:
#   type: ''
#   key: ''
#   values: []
# releasePrefix: ''
# envs: {}
# envsString: ''
# secretEnvs: {}
# secretEnvsString: ''
# imagePullSecrets: {}
# defaultImage: nodered/node-red
# defaultImageTag: latest
# defaultImagePullPolicy: Always
# deployments:
#   ubos-service-name:
#     labels: {}
#     podLabels: {}
#     replicaCount: "1"
#     nodeSelector: {}
#     tolerations: []
#     initContainers: [] 
#     strategy:
#       type: Recreate
#     extraImagePullSecrets:
#       - name: regcred
#     extraSelectorLabels:
#       app: ubos-service-name
#     serviceAccountName: default
#     containers:
#       - name: ubos-service-name
#         image: betedo/ubos-nodered
#         imagePullPolicy: Always
        # env: 
        #   - name: KEYCLOAK_CLIENT_ID
        #     value: ubos-service-KEYCLOAK_CLIENT_ID
        #   - name: KEYCLOAK_CLIENT_SECRET
        #     value: ubos-service-KEYCLOAK_CLIENT_SECRET
        #   - name: KEYCLOAK_HOST
        #     value: ubos-service-KEYCLOAK_HOST
        #   - name: KEYCLOAK_REALM
        #     value: ubos-service-KEYCLOAK_REALM
        #   - name: KC_LEGACY
        #     value: ubos-service-KC_LEGACY
        #   - name: NODE_RED_ENABLE_PROJECTS
        #     value: 'true'
        #   - name: NODE_TLS_REJECT_UNAUTHORIZED
        #     value: '0'
        #   - name: MAIN_URL
        #     value: ubos-service-MAIN_URL
#         envsFromSecret: {}
#         readinessProbe:
#           failureThreshold: 20
#           httpGet:
#             path: /
#             port: 1880
#             scheme: HTTP
#           initialDelaySeconds: 30
#           periodSeconds: 20
#           successThreshold: 1
#           timeoutSeconds: 15
#         envSecrets: []
#         envsFromConfigmap: {}
#         envConfigmaps: []
#         volumeMounts:
#           - name: nodered-dataubos-service-name
#             mountPath: /data
#         resources: {}
#     volumes:
#       - type: pvc
#         name: nodered-dataubos-service-name
#         items:
#           - key: nodered-dataubos-service-name
#             path: nodered-dataubos-service-name
# services:
#   ubos-service-name:
#     clusterIP: None
#     ports:
#       - name: http
#         protocol: TCP
#         port: 1880
#     extraSelectorLabels:
#       app: ubos-service-name
# ingresses:
#   ubos-service-url:
#     annotations:
#       nginx.ingress.kubernetes.io/rewrite-target: /
#       nginx.ingress.kubernetes.io/proxy-read-timeout: 3600s
#       nginx.ingress.kubernetes.io/proxy-send-timeout: 3600s
#       nginx.ingress.kubernetes.io/proxy-connect-timeout: 3600s
#       nginx.ingress.kubernetes.io/proxy-body-size: 120m
#       nginx.ingress.kubernetes.io/client-body-buffer-size: 120m
#       node-red.ingress.kubernetes.io/proxy-body-size: 128m
#     ingressClassName: nginx
#     name: ubos-service-name
#     hosts:
#       - paths:
#           - pathType: Prefix
#             path: /
#             serviceName: ubos-service-name
#             servicePort: http
#     extraTls:
#       - hosts:
#           - ubos-service-url
#         secretName: ubos-service-tls-secret
# secrets: {}
# configMaps: {}
# pvcs:
#   nodered-dataubos-service-name:
#     accessModes:
#       - ReadWriteOnce
#     size: 5Gi
# hooks: {}
# cronJobs: {}
# jobs: {}
# serviceMonitors: {}
# diagnosticMode:
#   enbled: false
#   command:
#     - sleep
#   args:
#     - infinity
# extraDeploy: {}
