generic:
  labels:
    link: ''
  annotations: {}
  extraSelectorLabels: {}
  podLabels: {}
  podAnnotations: {}
  extraVolumes: []
  extraImagePullSecrets:
    - name: regcred
podAffinityPreset: soft
podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: ''
  key: ''
  values: []
releasePrefix: ''
envs: {}
envsString: ''
secretEnvs: {}
secretEnvsString: ''
imagePullSecrets: {}
defaultImage: nodered/node-red
defaultImageTag: latest
defaultImagePullPolicy: Always
deployments:
  nodered-name:
    labels: {}
    podLabels: {}
    replicaCount: 1
    nodeSelector: {}
    tolerations: []
    strategy:
      type: Recreate
    extraImagePullSecrets:
      - name: regcred
    extraSelectorLabels:
      app: nodered-name
    serviceAccountName: default
    containers:
      - name: nodered-name
        image: betedo/ubos-nodered
        imageTag: nodered-tag
        imagePullPolicy: Always
        env: []
        envsFromSecret: {}
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /
            port: 1880
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 15
        envSecrets: []
        envsFromConfigmap: {}
        envConfigmaps: []
        volumeMounts:
          - name: nodered-datanodered-name
            mountPath: /data
        resources: {}
    volumes:
      - type: pvc
        name: nodered-datanodered-name
        items:
          - key: nodered-datanodered-name
            path: nodered-datanodered-name
services:
  nodered-name:
    clusterIP: None
    ports:
      - name: http
        protocol: TCP
        port: 1880
    extraSelectorLabels:
      app: nodered-name
ingresses:
  nodered-url:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-read-timeout: 3600s
      nginx.ingress.kubernetes.io/proxy-send-timeout: 3600s
      nginx.ingress.kubernetes.io/proxy-connect-timeout: 3600s
      nginx.ingress.kubernetes.io/proxy-body-size: 120m
      nginx.ingress.kubernetes.io/client-body-buffer-size: 120m
      node-red.ingress.kubernetes.io/proxy-body-size: 128m
    ingressClassName: nginx
    name: nodered-name
    hosts:
      - paths:
          - pathType: Prefix
            path: /
            serviceName: nodered-name
            servicePort: http
    extraTls:
      - hosts:
          - nodered-url
        secretName: tls-secret
secrets: {}
configMaps: {}
pvcs:
  nodered-datanodered-name:
    accessModes:
      - ReadWriteOnce
    size: 5Gi
hooks: {}
cronJobs: {}
jobs: {}
serviceMonitors: {}
diagnosticMode:
  enbled: false
  command:
    - sleep
  args:
    - infinity
extraDeploy: {}
