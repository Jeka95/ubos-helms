replicaCount: 1
image:
  repository: ghcr.io/berriai/litellm-database
  pullPolicy: Always
  tag: ""

imagePullSecrets: []
nameOverride: "litellm"
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
environmentSecrets: []
environmentConfigMaps: []
service:
  type: ClusterIP
  port: 4000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: aubos-service-url
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: ubos-service-tls-secret
      hosts:
        - ubos-service-url
proxy_config:
  model_list:
    - model_name: gpt-3.5-turbo
      litellm_params:
        model: gpt-3.5-turbo
        api_key: eXaMpLeOnLy
    - model_name: fake-openai-endpoint
      litellm_params:
        model: openai/fake
        api_key: fake-key
        api_base: https://exampleopenaiendpoint-production.up.railway.app/
  general_settings:
    master_key: os.environ/PROXY_MASTER_KEY

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

db:
  useExisting: false
  endpoint: localhost
  database: litellm
  url: postgresql://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST)/$(DATABASE_NAME)
  secret:
    name: postgres
    usernameKey: username
    passwordKey: password
  useStackgresOperator: false
  deployStandalone: true
postgresql:
  architecture: standalone
  auth:
    username: litellm
    database: litellm
    password: NoTaGrEaTpAsSwOrD
    postgres-password: NoTaGrEaTpAsSwOrD
redis:
  enabled: false
  architecture: standalone

migrationJob:
  enabled: true
  retries: 3
  backoffLimit: 4
  disableSchemaUpdate: false
