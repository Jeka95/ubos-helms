apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-admin-init"
  labels:
    app: {{ template "chatwoot.fullname" . }}
    release: "{{ .Release.Name }}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    "helm.sh/hook-weight": "1"
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: chatwoot-admin-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - sh
            - -c
            - |
              echo "⏳ Waiting for users table..."
              until bundle exec rails runner "exit(ActiveRecord::Base.connection.table_exists?('users') ? 0 : 1)"; do
                echo "⌛ Not ready yet..."
                sleep 2
              done
              echo "✅ Running initialization script..."
              bundle exec rails runner " \
                app_token = '{{ .Values.admin.app_token }}'; \
                u = User.find_or_create_by!(email: '{{ .Values.admin.email }}') do |usr| \
                  usr.name = '{{ .Values.admin.name }}'; \
                  usr.password = '{{ .Values.admin.password }}'; \
                  usr.password_confirmation = '{{ .Values.admin.password }}'; \
                  usr.confirmed_at = Time.zone.now; \
                end; \
                a = Account.find_or_create_by!(name: '{{ .Values.admin.account_name }}'); \
                AccountUser.find_or_create_by!(user: u, account: a) do |au| \
                  au.role = :administrator; \
                end; \
                u.accounts << a unless u.accounts.include?(a); \
                app = PlatformApp.find_or_create_by!(name: 'Ubos Platform App'); \
                AccessToken.find_or_create_by!(token: app_token, owner: app); \
                puts \"✅ Admin user and platform app with token created.\" \
              "
          envFrom:
            - secretRef:
                name: {{ template "chatwoot.fullname" . }}-env
          {{- if .Values.existingEnvSecret }}
            - secretRef:
                name: {{ .Values.existingEnvSecret }}
          {{- end }}
