# generic:
#   labels: 
#     link: ubos-service-service_label
#   annotations: {}
#   extraSelectorLabels: {}
#   podLabels: {}
#   podAnnotations: {}
#   extraVolumes: []
#   extraImagePullSecrets:
#     - name: regcred
# podAffinityPreset: soft
# podAntiAffinityPreset: soft
# nodeAffinityPreset:
#   type: ''
#   key: ''
#   values: []
# releasePrefix: ''
# envs: {}
# envsString: '' 
# secretEnvs: {}
# secretEnvsString: ''
# imagePullSecrets: {}
# defaultImage: nodered/node-red
# defaultImageTag: latest
# defaultImagePullPolicy: IfNotPresent
# deployments:
#   ubos-service-name:
#     name: ubos-service-service_label
#     labels: {}
#     podLabels: {}
#     replicaCount: "1"
#     nodeSelector: {}
#     tolerations: []
#     strategy:
#       type: Recreate
#     extraImagePullSecrets:
#       - name: regcred
#     extraSelectorLabels:
#       app: ubos-service-service_label
#     serviceAccountName: default
#     containers:
#       - name: ubos-service-service_label
#         image: mongo
#         imagePullPolicy: Always
#         env:
#           - name: MONGO_INITDB_DATABASE
#             value: ubos-service-name
#           - name: MONGO_INITDB_ROOT_USERNAME
#             value: ubos-service-user-name
#           - name: MONGO_INITDB_ROOT_PASSWORD
#             value: ubos-service-password
#         envsFromSecret: {}
#         readinessProbe:
#           failureThreshold: 20
#           httpGet:
#             path: /
#             port: 27017
#             scheme: HTTP
#           initialDelaySeconds: 30
#           periodSeconds: 20
#           successThreshold: 1
#           timeoutSeconds: 15
#         envSecrets: []
#         envsFromConfigmap: {}
#         envConfigmaps: []
#         volumeMounts:
#           - name: ubos-service-service_label
#             mountPath: /data/db
#         resources: {}
#     volumes:
#       - type: pvc
#         name: ubos-service-service_label
#         items:
#           - key: ubos-service-service_label
#             path: ubos-service-service_label
# services:
#   mongo-1487:
#     name: ubos-service-service_label
#     ports:
#       - port: 27017
#         targetPort: 27017
#         protocol: TCP
#     extraSelectorLabels:
#       app: ubos-service-service_label
#     type: ClusterIP
# ingresses: {}
# secrets: {}
# configMaps: {}
# pvcs:
#   ubos-service-service_label:
#     accessModes:
#       - ReadWriteOnce
#     size: 5Gi
# hooks: {}
# cronJobs: {}
# jobs: {}
# serviceMonitors: {}
# diagnosticMode:
#   enbled: false
#   command:
#     - sleep
#   args:
#     - infinity
# extraDeploy: {}
